name: Publish

on:
  push:
    tags:
      - 'v*' # Publish on any new tag starting with v

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Set RELEASE_VERSION env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: Create nuget package
      run: dotnet pack CircularBuffer/CircularBuffer.csproj -c Release /p:Version=${{ env.RELEASE_VERSION }}

    - name: prepare artifacts
      run: |
        ARTIFACT_NUPKG_PATHNAME=$(ls CircularBuffer/bin/Release/*.nupkg | head -n 1)
        echo "ARTIFACT_NUPKG_PATHNAME=${ARTIFACT_NUPKG_PATHNAME}" >> $GITHUB_ENV
        cd CircularBuffer/bin/Release/
        ls */*.dll | xargs -I _FILE_ bash -c "cp _FILE_ \$(echo _FILE_ | sed 's/\//_/g')"

    - name: nuget push
      run: dotnet nuget push "${NUPKG_PATH}" --api-key "${NUGET_KEY}" --source https://api.nuget.org/v3/index.json
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
        NUPKG_PATH: ${{ env.ARTIFACT_NUPKG_PATHNAME }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
          files: |
            CircularBuffer/bin/Release/*.nupkg
            CircularBuffer/bin/Release/*.dll
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
