name: Publish

on:
  push:
    tags:
      - 'v*' # Publish on any new tag starting with v

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet: [3.1]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Set RELEASE_VERSION env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: Create nuget package
      run: dotnet pack CircularBuffer/CircularBuffer.csproj -c Release /p:Version=${{ env.RELEASE_VERSION }}

    - name: nupkg artifact path
      run: |
        ARTIFACT_PATHNAME=$(ls CircularBuffer/bin/Release/*.nupkg | head -n 1)
        ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
        echo "ARTIFACT_PATHNAME=${ARTIFACT_PATHNAME}" >> $GITHUB_ENV

    - name: nuget push
      run: dotnet nuget push "${NUPKG_PATH}" --api-key "${NUGET_KEY}" --source https://api.nuget.org/v3/index.json
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
        NUPKG_PATH: ${{ env.ARTIFACT_PATHNAME }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_PATHNAME }}
        asset_name: ${{ env.ARTIFACT_NAME }}
        asset_content_type: application/octet-stream
